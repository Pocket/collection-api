generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model CollectionStoryAuthor {
  externalId        String          @id @default(uuid()) @db.VarChar(255)
  name              String          @db.VarChar(255)
  collectionStoryId Int
  sortOrder         Int             @default(0)
  collectionStory   CollectionStory @relation(fields: [collectionStoryId], references: [id])

  @@index([collectionStoryId], name: "collectionStoryId")
}

model CollectionStory {
  id           Int         @id @default(autoincrement())
  externalId   String      @default(uuid()) @db.VarChar(255)
  collectionId Int
  url          String      @db.VarChar(500)
  title        String      @db.VarChar(255)
  excerpt      String      @db.Text
  imageUrl     String      @db.VarChar(500)
  publisher    String      @db.VarChar(255)
  sortOrder    Int         @default(0)
  createdAt    DateTime    @default(now()) @db.Timestamp(0)
  updatedAt    DateTime    @updatedAt
  authors      CollectionStoryAuthor[]
  collection   Collection  @relation(fields: [collectionId], references: [id])

  @@unique([collectionId, url], name: "collectionIdUrl")
  @@unique([externalId], name: "externalId")
  @@index([collectionId], name: "collectionId")
  @@index([url], name: "url")
}

model Image {
  id            Int                 @id @default(autoincrement())
  entityId      Int?
  entityType    ImageEntityType?
  sizeCategory  ImageSizeCategory   @default(LARGE)
  width         Int
  height        Int
  mimeType      String              @db.VarChar(255)
  fileSizeBytes Int
  fileName      String              @db.VarChar(255)
  path          String              @db.VarChar(255)
  createdAt     DateTime            @default(now()) @db.DateTime(0)
  updatedAt     DateTime            @updatedAt

  @@index([entityId, entityType], name: "entityIdEntityType")
  @@unique([path], name: "path")
}

model CollectionAuthor {
  id                Int                 @id @default(autoincrement())
  externalId        String              @default(uuid()) @db.VarChar(255)
  name              String              @unique @db.VarChar(255)
  slug              String?             @db.VarChar(300)
  bio               String?             @db.Text
  imageUrl          String?             @db.VarChar(500)
  createdAt         DateTime            @default(now()) @db.DateTime(0)
  updatedAt         DateTime            @updatedAt
  active            Boolean?            @default(true)
  collections       Collection[]

  @@index([name], name: "name")
  @@unique([externalId], name: "externalId")
}

model Collection {
  id                 Int                 @id @default(autoincrement())
  externalId         String              @default(uuid()) @db.VarChar(255)
  slug               String              @unique @db.VarChar(300)
  title              String              @db.VarChar(255)
  excerpt            String?             @db.Text
  intro              String?             @db.Text
  imageUrl           String?             @db.VarChar(500)
  publishedAt        DateTime?           @db.DateTime(0)
  status             CollectionStatus?   @default(DRAFT)
  createdAt          DateTime            @default(now()) @db.DateTime(0)
  updatedAt          DateTime            @updatedAt
  authors            CollectionAuthor[]
  stories            CollectionStory[]

  @@index([slug], name: "slug")
  @@index([title], name: "title")
  @@unique([externalId], name: "externalId")
}

enum ImageEntityType {
  COLLECTION
  COLLECTION_STORY
  COLLECTION_AUTHOR
}

enum ImageSizeCategory {
  SMALL
  MEDIUM
  LARGE
}

enum CollectionStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

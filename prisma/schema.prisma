generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model collection_author {
  collectionId Int
  authorId     Int
  authors      authors     @relation(fields: [authorId], references: [id])
  collections  collections @relation(fields: [collectionId], references: [id])

  @@id([collectionId, authorId])
  @@index([authorId], name: "authorId")
}

model collection_story {
  id           Int         @id @default(autoincrement())
  external_id  String?     @db.VarChar(255)
  storyId      Int?
  collectionId Int
  title        String      @db.VarChar(1000)
  excerpt      String      @db.Text
  imageUrl     String      @db.VarChar(1000)
  authors      String      @db.VarChar(500)
  publisher    String      @db.VarChar(255)
  sortOrder    Int         @default(0)
  createdAt    DateTime    @default(now()) @db.Timestamp(0)
  updatedAt    DateTime    @default(now()) @db.Timestamp(0)
  collections  collections @relation(fields: [collectionId], references: [id])
  stories      stories?    @relation(fields: [storyId], references: [id])

  @@index([collectionId], name: "idx_collection_story_collection")
  @@index([storyId], name: "storyId")
}

model images {
  id            Int                 @id @default(autoincrement())
  entityId      String              @db.VarChar(255)
  entityType    images_entityType
  sizeCategory  images_sizeCategory @default(large)
  width         Int?
  height        Int?
  mimeType      String?             @db.VarChar(50)
  fileSizeBytes Int?
  fileName      String?             @db.VarChar(255)
  path          String?             @db.VarChar(500)
  createdAt     DateTime            @default(now()) @db.Timestamp(0)
  updatedAt     DateTime            @default(now()) @db.Timestamp(0)

  @@index([entityId, entityType], name: "idx_images_entity_entity_type")
}

model authors {
  id                Int                 @id @default(autoincrement())
  external_id       String?             @db.VarChar(255)
  name              String              @unique @db.VarChar(500)
  slug              String?             @db.VarChar(300)
  bio               String?             @db.Text
  imageUrl          String?             @db.VarChar(500)
  createdAt         DateTime            @default(now()) @db.Timestamp(0)
  updatedAt         DateTime            @default(now()) @db.Timestamp(0)
  active            Boolean?            @default(true)
  collection_author collection_author[]

  @@index([name], name: "idx_author_name")
}

model collections {
  id                Int                 @id @default(autoincrement())
  external_id       String?             @db.VarChar(255)
  slug              String              @unique @db.VarChar(255)
  title             String              @db.VarChar(500)
  excerpt           String?             @db.Text
  intro             String?             @db.Text
  imageUrl          String?             @db.VarChar(500)
  publishedAt       DateTime?           @db.Timestamp(0)
  status            collections_status? @default(draft)
  createdAt         DateTime            @default(now()) @db.Timestamp(0)
  updatedAt         DateTime            @default(now()) @db.Timestamp(0)
  collection_author collection_author[]
  collection_story  collection_story[]

  @@index([slug], name: "idx_collection_slug")
  @@index([title], name: "idx_collection_title")
}

model stories {
  id               Int                @id @default(autoincrement())
  url              String             @unique @db.VarChar(1000)
  createdAt        DateTime           @default(now()) @db.Timestamp(0)
  updatedAt        DateTime           @default(now()) @db.Timestamp(0)
  collection_story collection_story[]
}

enum images_entityType {
  collection
  collection_story
}

enum images_sizeCategory {
  small
  medium
  large
}

enum collections_status {
  draft
  published
  archived
}
